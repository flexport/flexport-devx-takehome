name: Deploy to Kubernetes cluster
on:
  workflow_run:
    workflows: [Build and Publish Container Image]
    types:
      - completed

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      #Creating the K8 Cluster for deploying the application on it.
      - uses: actions/checkout@v3
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0

      #Testing the K8 Cluster
      - name: Testing
        run: |
          kubectl wait nodes --for condition=Ready --all
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      #Deploying the application on the cluster and exposing the port.
      - name: Deploy Application
        run: |
          kubectl create deployment rps-app --image=ghcr.io/${{ github.repository }}:main
          kubectl wait pods --for condition=Ready --timeout=90s --all
          kubectl expose deployment/rps-app --type=NodePort --port 5000

      #Installing the test dependencies for running integration tests.
      - name: Install Test Dependencies
        run: |
          pip install pytest
          pip install requests
          pip install coverage

      #Running the application Integration Tests on the application deployed in the cluster.
      - name: Test Deployment
        run: |
          export NODE_PORT=$(kubectl get services/rps-app -o go-template='{{(index .spec.ports 0).nodePort}}')
          echo NODE_PORT=${NODE_PORT}
          kubectl describe services/rps-app
          export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')
          kubectl port-forward service/rps-app 5000:5000 > /dev/null &
          python -m pytest -v ./tests/integration/test_integration.py
          coverage run -m pytest -v ./tests/integration
          coverage report -m

      #Deleting the cluster.
      - name: Cleanup
        if: always()
        run: |
          kind delete cluster --name test-cd-rps-app
